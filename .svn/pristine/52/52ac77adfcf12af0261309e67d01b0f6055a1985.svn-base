package com.ruoyi.bpr.service.impl;


import com.ruoyi.bpr.domain.ContractManage;
import com.ruoyi.bpr.domain.SalesAccountData;

import com.ruoyi.bpr.mapper.SalesDataMapper;
import com.ruoyi.bpr.service.ISalesDataService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;


import java.util.Date;
import java.util.List;

@Service
public class SalesDataService implements ISalesDataService {
    @Autowired
    SalesDataMapper salesDataMapper;

    /**
     * 根据合同号查找收款数据
     *
     * @param contractNumber
     * @return
     */
    @Override
    public List<SalesAccountData> selectSalesDataByContractNumber(String contractNumber) {
        return salesDataMapper.selectByContractNumber(contractNumber);
    }

    /**
     * 查找导出明细数据
     *
     * @return
     */
    @Override
    public List<SalesAccountData> selectExportList() {
        return salesDataMapper.selectExportList();
    }

    /**
     * 查找客户
     *
     * @return
     */
    @Override
    public List<SalesAccountData> selectCustomer() {
        return salesDataMapper.selectCustomer();
    }

    /**
     * 根据客户代码查找合同编号
     *
     * @param clientCode
     * @return
     */
    @Override
    public List<String> selectContractNumber(Integer clientCode) {

        List<String> contractNumbers = salesDataMapper.selectContractNumberByClientCode(clientCode);

        return contractNumbers;
    }

    @Override
    public Double selectAllocatedMoney(Integer clientCode) {
        //已收账款总额
        Double totalReceive = salesDataMapper.selectPaymentAccount(clientCode);
        if (totalReceive == null) {
            totalReceive = 0.0;
        }
        //已分配总额
        Double allocatedPay = salesDataMapper.selectAllocatedPay(clientCode);
        if (allocatedPay == null) {
            allocatedPay = 0.0;
        }
        //可分配余额
        Double allocatedMoney = totalReceive - allocatedPay;

        return allocatedMoney;
    }

    /**
     * 根据合同账号删除台账信息
     * @param contractNumber

     * @param modifiedUser
     * @param modifiedTime
     * @return
     */
    @Override
    public Integer deleteAccountInfo(String contractNumber, String modifiedUser, Date modifiedTime) {

        return salesDataMapper.removeAccountInfo(contractNumber,modifiedUser,modifiedTime);
    }

    /**
     * 查找收款数据
     *
     * @param contractManage
     * @return
     */
    @Override
    public List<SalesAccountData> searchSalesDataList(ContractManage contractManage) {

        return salesDataMapper.selectSalesDataList(contractManage);
    }

    /**
     * 查找合同编号
     *
     * @return
     */
    @Override
    public List<String> searchContractNumber() {
        return salesDataMapper.selectContractNumber();
    }

    /**
     * 增加收款记录
     *
     * @param salesAccountData
     * @return
     */
    @Override
    public Integer addAccount(SalesAccountData salesAccountData) {
        return salesDataMapper.insertAccount(salesAccountData);
    }


}
